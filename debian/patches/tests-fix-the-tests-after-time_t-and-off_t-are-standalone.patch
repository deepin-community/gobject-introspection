From: liushuyu <liushuyu011@gmail.com>
Date: Mon, 11 Mar 2024 12:49:45 -0600
Subject: tests: fix the tests after time_t and off_t are standalone types

Applied-upstream: 1.80.1, commit:12b1e519b94f316533b69bc4ce3eaab70f981c62
---
 giscanner/docwriter.py                                              | 2 ++
 tests/meson.build                                                   | 2 ++
 .../Regress-1.0-Gjs-expected/Regress.FooObject.is_it_time_yet.page  | 4 ++--
 tests/scanner/Regress-1.0-Gjs-expected/Regress.test_timet.page      | 6 +++---
 tests/scanner/Regress-1.0-expected.gir                              | 6 +++---
 5 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/giscanner/docwriter.py b/giscanner/docwriter.py
index 0ef47b8..9d2dcbd 100644
--- a/giscanner/docwriter.py
+++ b/giscanner/docwriter.py
@@ -782,6 +782,8 @@ class DocFormatterPython(DocFormatterIntrospectableBase):
             "gulong": "int",
             "gint64": "int",
             "guint64": "int",
+            "time_t": "int",
+            "off_t": "int",
             "gfloat": "float",
             "gdouble": "float",
             "gchararray": "str",
diff --git a/tests/meson.build b/tests/meson.build
index 22b402b..6ba7007 100644
--- a/tests/meson.build
+++ b/tests/meson.build
@@ -64,6 +64,8 @@ test_everything_files = custom_target('everything',
     '--function-decoration=_GI_TEST_EXTERN',
     '--include-first-in-src=config.h',
     '--include-last-in-header=gitestmacros.h',
+    '--include-last-in-header=sys/types.h',
+    '--include-last-in-header=time.h',
   ],
   install: true,
   install_dir: test_install_dir,
diff --git a/tests/scanner/Regress-1.0-Gjs-expected/Regress.FooObject.is_it_time_yet.page b/tests/scanner/Regress-1.0-Gjs-expected/Regress.FooObject.is_it_time_yet.page
index 61c1a7f..1a708d8 100644
--- a/tests/scanner/Regress-1.0-Gjs-expected/Regress.FooObject.is_it_time_yet.page
+++ b/tests/scanner/Regress-1.0-Gjs-expected/Regress.FooObject.is_it_time_yet.page
@@ -13,14 +13,14 @@
       </api:returns>
       <api:name>regress_foo_object_is_it_time_yet</api:name>
       <api:arg>
-        <api:type>Number(glong)</api:type>
+        <api:type>Number(time_t)</api:type>
         <api:name>time</api:name>
       </api:arg>
     </api:function>
   </info>
   <title>Regress.FooObject.prototype.is_it_time_yet</title>
   <synopsis><code mime="text/x-gjs">
-function is_it_time_yet(time: Number(glong)): void {
+function is_it_time_yet(time: Number(time_t)): void {
     // Gjs wrapper for regress_foo_object_is_it_time_yet()
 }
   </code></synopsis>
diff --git a/tests/scanner/Regress-1.0-Gjs-expected/Regress.test_timet.page b/tests/scanner/Regress-1.0-Gjs-expected/Regress.test_timet.page
index 09aa430..36e9017 100644
--- a/tests/scanner/Regress-1.0-Gjs-expected/Regress.test_timet.page
+++ b/tests/scanner/Regress-1.0-Gjs-expected/Regress.test_timet.page
@@ -9,18 +9,18 @@
     <link xref="index" group="function" type="guide"/>
     <api:function>
       <api:returns>
-        <api:type>Number(glong)</api:type>
+        <api:type>Number(time_t)</api:type>
       </api:returns>
       <api:name>regress_test_timet</api:name>
       <api:arg>
-        <api:type>Number(glong)</api:type>
+        <api:type>Number(time_t)</api:type>
         <api:name>in</api:name>
       </api:arg>
     </api:function>
   </info>
   <title>Regress.test_timet</title>
   <synopsis><code mime="text/x-gjs">
-function test_timet(in: Number(glong)): Number(glong) {
+function test_timet(in: Number(time_t)): Number(time_t) {
     // Gjs wrapper for regress_test_timet()
 }
   </code></synopsis>
diff --git a/tests/scanner/Regress-1.0-expected.gir b/tests/scanner/Regress-1.0-expected.gir
index 708ecd0..795ded4 100644
--- a/tests/scanner/Regress-1.0-expected.gir
+++ b/tests/scanner/Regress-1.0-expected.gir
@@ -2034,7 +2034,7 @@ uses a C sugar return type.</doc>
             <type name="FooObject" c:type="RegressFooObject*"/>
           </instance-parameter>
           <parameter name="time" transfer-ownership="none">
-            <type name="glong" c:type="time_t"/>
+            <type name="time_t" c:type="time_t"/>
           </parameter>
         </parameters>
       </method>
@@ -8675,11 +8675,11 @@ https://bugzilla.gnome.org/show_bug.cgi?id=685399</doc>
     <function name="test_timet" c:identifier="regress_test_timet">
       <source-position filename="regress.h" line="94"/>
       <return-value transfer-ownership="none">
-        <type name="glong" c:type="time_t"/>
+        <type name="time_t" c:type="time_t"/>
       </return-value>
       <parameters>
         <parameter name="in" transfer-ownership="none">
-          <type name="glong" c:type="time_t"/>
+          <type name="time_t" c:type="time_t"/>
         </parameter>
       </parameters>
     </function>
