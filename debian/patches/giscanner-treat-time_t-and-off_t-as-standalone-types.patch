From: liushuyu <liushuyu011@gmail.com>
Date: Mon, 11 Mar 2024 12:48:54 -0600
Subject: giscanner: treat time_t and off_t as standalone types

g-ir-scanner previously mapped these to lower-level types at scan time
by assuming that time_t is an alias for long and off_t is an alias
for size_t.  This is not always accurate: some ILP32 architectures have
64-bit time_t (for Y2038 compatibility) and 64-bit off_t (for large
file support).

[smcv: Added longer commit message]
Resolves: https://gitlab.gnome.org/GNOME/gobject-introspection/-/issues/494
Co-authored-by: Simon McVittie <smcv@debian.org>
Signed-off-by: Simon McVittie <smcv@debian.org>
Applied-upstream: 1.80.1, commit:59af96564fcb9f472952199365a7afd1e9e2607b
Bug-Debian: https://bugs.debian.org/1066032
---
 giscanner/ast.py       | 9 ++++++---
 giscanner/docwriter.py | 4 +++-
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/giscanner/ast.py b/giscanner/ast.py
index ad94f43..735a31e 100644
--- a/giscanner/ast.py
+++ b/giscanner/ast.py
@@ -233,6 +233,9 @@ TYPE_DOUBLE = Type(target_fundamental='gdouble', ctype='gdouble')
 TYPE_LONG_DOUBLE = Type(target_fundamental='long double',
                         ctype='long double')
 TYPE_UNICHAR = Type(target_fundamental='gunichar', ctype='gunichar')
+# Platform-specific types
+TYPE_TIME_T = Type(target_fundamental='time_t', ctype='time_t')
+TYPE_OFF_T = Type(target_fundamental='off_t', ctype='off_t')
 
 # C types with semantics overlaid
 TYPE_GTYPE = Type(target_fundamental='GType', ctype='GType')
@@ -245,7 +248,7 @@ BASIC_TYPES = [TYPE_BOOLEAN, TYPE_INT8, TYPE_UINT8, TYPE_INT16,
                TYPE_UINT16, TYPE_INT32, TYPE_UINT32, TYPE_INT64,
                TYPE_UINT64, TYPE_CHAR, TYPE_SHORT, TYPE_USHORT, TYPE_INT,
                TYPE_UINT, TYPE_LONG, TYPE_ULONG, TYPE_SIZE, TYPE_SSIZE,
-               TYPE_LONG_LONG, TYPE_LONG_ULONG,
+               TYPE_LONG_LONG, TYPE_LONG_ULONG, TYPE_TIME_T, TYPE_OFF_T,
                TYPE_FLOAT, TYPE_DOUBLE,
                TYPE_LONG_DOUBLE, TYPE_UNICHAR, TYPE_GTYPE]
 
@@ -346,8 +349,8 @@ type_names['size_t'] = type_names['gsize']
 type_names['ssize_t'] = type_names['gssize']
 type_names['uintptr_t'] = type_names['guintptr']
 type_names['intptr_t'] = type_names['gintptr']
-type_names['time_t'] = TYPE_LONG
-type_names['off_t'] = type_names['gsize']
+type_names['time_t'] = TYPE_TIME_T
+type_names['off_t'] = TYPE_OFF_T
 type_names['pid_t'] = TYPE_INT
 type_names['uid_t'] = TYPE_UINT
 type_names['gid_t'] = TYPE_UINT
diff --git a/giscanner/docwriter.py b/giscanner/docwriter.py
index cd49cea..0ef47b8 100644
--- a/giscanner/docwriter.py
+++ b/giscanner/docwriter.py
@@ -923,6 +923,8 @@ class DocFormatterGjs(DocFormatterIntrospectableBase):
             "gulong": "Number(gulong)",
             "gint64": "Number(gint64)",
             "guint64": "Number(guint64)",
+            "time_t": "Number(time_t)",
+            "off_t": "Number(off_t)",
             "long double": "Number(long double)",
             "long long": "Number(long long)",
             "unsigned long long": "Number(unsigned long long)"}
@@ -1149,7 +1151,7 @@ class DevDocsFormatterGjs(DocFormatterGjs):
                     "gchar", "guchar", "gshort", "gint", "guint", "gfloat",
                     "gdouble", "gsize", "gssize", "gintptr", "guintptr",
                     "glong", "gulong", "gint64", "guint64", "long double",
-                    "long long", "unsigned long long"]:
+                    "long long", "unsigned long long", "time_t", "off_t"]:
             return "Number"  # gsize and up cannot fully be represented in GJS
         if name in ["none", "gpointer"]:
             return "void"
